#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT COUNT(orderID)
FROM BIT_DB0.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#2. How many of those orders were for an iPhone? 
SELECT COUNT(Product)
FROM BIT_DB0.JanSales
WHERE Product = 'iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum
FROM BIT_DB0.customers AS customers
INNER JOIN BIT_DB0.FebSales AS feb
ON customers.order_id = feb.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT DISTINCT product, price
FROM BIT_DB0.JanSales
WHERE price IN (SELECT min(price) FROM BIT_DB0.JanSales);

#5. What is the total revenue for each product sold in January?
SELECT sum(quantity)*price AS revenue, product
FROM BIT_DB0.JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, sum(quantity), sum(quantity)*price AS revenue
FROM BIT_DB0.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT count(distinct cust.acctnum), avg(quantity*price)
FROM BIT_DB0.FebSales Feb
LEFT JOIN BIT_DB0.customers cust
ON Feb.orderID = cust.order_id
WHERE Feb.Quantity >2
AND length(orderID) = 6
AND orderID <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product, SUM(quantity)
FROM BIT_DB0.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;
